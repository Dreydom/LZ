using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LZ
{
    public class CodeWord
    {
        public int Prefix { get; set; }
        public int Update { get; set; }
    }
    public class Phrase
    {
        public Phrase() { }
        public Phrase(string input, int prefix, int update, string code)
        {
            this.input = input;
            this.codeWord.Prefix = prefix;
            this.codeWord.Update = update;
            this.code = code;
        }
        public string input { get; set; }
        public CodeWord codeWord { get; set; }
        public string code { get; set; }
    }
    class Program
    {
        public static string BinaryToString(string data)
        {
            List<Byte> byteList = new List<Byte>();
            for (int i = 0; i < data.Length; i += 8)
            {
                byteList.Add(Convert.ToByte(data.Substring(i, 8), 2));
            }
            return Encoding.Default.GetString(byteList.ToArray());
        }
        static string Encode(string BS, int limit, List<Phrase> table)
        {
            int phrasesize = (int)Math.Log(limit, 2);
            table.Clear();
            table.Add(new Phrase() { input = "0", codeWord = new CodeWord { Prefix = 0, Update = 0 }, code = "0".PadLeft(phrasesize, '0') });
            table.Add(new Phrase() { input = "1", codeWord = new CodeWord { Prefix = 0, Update = 0 }, code = "1".PadLeft(phrasesize, '0') });
            string temp = "";
            string encoded = "";
            for (int i = 0; i < BS.Length; i++)
            {
                temp += BS[i];
                int index = table.FindIndex(x => x.input == temp);
                if (index == -1)
                {
                    if (table.Count < limit)
                    {
                        int indexprefix = table.FindIndex(x => x.input == temp.Remove(temp.Length - 1));
                        CodeWord _codeWord = new CodeWord()
                        {
                            Prefix = indexprefix,
                            Update = temp.Last() - 48 //0 это 48-й символ в таблице ASCII, 1 это 49-й символ в таблице ASCII
                        };
                        string _code = Convert.ToString(indexprefix + 1, 2).PadLeft(phrasesize, '0') + temp.Last();
                        table.Add(new Phrase() { input = temp, codeWord = _codeWord, code = _code });
                        encoded += _code;
                        temp = "";
                    }
                    else
                    {
                        temp = temp.Remove(temp.Length - 1);
                        index = table.FindIndex(x => x.input == temp);
                        encoded += table[index].code;
                        i--;
                        temp = "";
                    }
                }
                else if (i == BS.Length - 1)
                {
                    encoded += table[index].code;
                }
            }
            return encoded;
        }
        static string Decode(string encoded, int limit, List<Phrase> table)
        {
            int phrasesize = (int)Math.Log(limit, 2);
            table.Clear();
            table.Add(new Phrase() { input = "0", codeWord = new CodeWord { Prefix = 0, Update = 0 }, code = "0".PadLeft(phrasesize, '0') });
            table.Add(new Phrase() { input = "1", codeWord = new CodeWord { Prefix = 0, Update = 0 }, code = "1".PadLeft(phrasesize, '0') });
            string BS = "";
            for (int i = 0; i < encoded.Length; i += phrasesize + 1)
            {
                string _code = encoded.Substring(i, phrasesize + 1);
                int _prefix = Convert.ToInt32(encoded.Substring(i, phrasesize), 2);
                int _update = encoded[i + 4].Equals('1') ? 1 : 0;
                int index = table.FindIndex(x => x.code == _code);
                string _input = table[_prefix - 1].input + (_update == 1 ? "1" : "0");
                if (index == -1)
                {
                    CodeWord _codeWord = new CodeWord() { Prefix = _prefix, Update = _update };
                    table.Add(new Phrase() { input = _input, codeWord = _codeWord, code = _code });
                }
                BS += _input;
            }
            return BS;
        }
        static void Main(string[] args)
        {
            string input = "Проснувшись однажды утром после беспокойного сна, Грегор Замза обнаружил, что он у себя в постели превратился в страшное насекомое. Лежа на панцирнотвердой спине, он видел, стоило ему приподнять голову, свой коричневый, выпуклый, разделенный дугообразными чешуйками живот, на верхушке которого еле держалось готовое вот-вот окончательно сползти одеяло. Его многочисленные, убого тонкие по сравнению с остальным телом ножки беспомощно копошились у него перед глазами. «Что со мной случилось?» – подумал он. Это не было сном. Его комната, настоящая, разве что слишком маленькая, но обычная комната, мирно покоилась в своих четырех хорошо знакомых стенах. Над столом, где были разложены распакованные образцы сукон – Замза был коммивояжером, – висел портрет, который он недавно вырезал из иллюстрированного журнала и вставил в красивую золоченую рамку. На портрете была изображена дама в меховой шляпе и боа, она сидела очень прямо и протягивала зрителю тяжелую меховую муфту, в которой целиком исчезала ее рука. Затем взгляд Грегора устремился в окно, и пасмурная погода – слышно было, как по жести подоконника стучат капли дождя – привела его и вовсе в грустное настроение. «Хорошо бы еще немного поспать и забыть всю эту чепуху», – подумал он, но это было совершенно неосуществимо, он привык спать на правом боку, а в теперешнем своем состоянии он никак не мог принять этого положения. С какой бы силой ни поворачивался он на правый бок, он неизменно сваливался опять на спину. Закрыв глаза, чтобы не видеть своих барахтающихся ног, он проделал это добрую сотню раз и отказался от этих попыток только тогда, когда почувствовал какую-то неведомую дотоле, тупую и слабую боль в боку. «Ах ты, господи, – подумал он, – какую я выбрал хлопотную профессию! Изо дня в день в разъездах. Деловых волнений куда больше, чем на месте, в торговом доме, а кроме того, изволь терпеть тяготы дороги, думай о расписании поездов, мирись с плохим, нерегулярным питанием, завязывай со все новыми и новыми людьми недолгие, никогда не бывающие сердечными отношения. Черт бы побрал все это!» Он почувствовал вверху живота легкий зуд; медленно подвинулся на спине к прутьям кровати, чтобы удобнее было поднять голову; нашел зудевшее место, сплошь покрытое, как оказалось, белыми непонятными точечками; хотел было ощупать это место одной из ножек, но сразу отдернул ее, ибо даже простое прикосновение вызвало у него, Грегора, озноб. Он соскользнул в прежнее свое положение. «От этого раннего вставания, – подумал он, – можно совсем обезуметь. Человек должен высыпаться. Другие коммивояжеры живут, как одалиски. Когда я, например, среди дня возвращаюсь в гостиницу, чтобы переписать полученные заказы, эти господа только завтракают. А осмелься я вести себя так, мои хозяин выгнал бы меня сразу. Кто знает, впрочем, может быть, это было бы даже очень хорошо для меня. Если бы я не сдерживался ради родителей, я бы давно заявил об уходе, я бы подошел к своему хозяину и выложил ему все, что о нем думаю. Он бы так и свалился с конторки! Странная у него манера – садиться на конторку и с ее высоты разговаривать со служащим, который вдобавок вынужден подойти вплотную к конторке из-за того, что хозяин туг на ухо. Однако надежда еще не совсем потеряна: как только я накоплю денег, чтобы выплатить долг моих родителей – на это уйдет еще лет пять-шесть, – я так и поступлю. Тут-то мы и распрощаемся раз и навсегда. А пока что надо подниматься, мой поезд отходит в пять». И он взглянул на будильник, который тикал на сундуке. «Боже правый!» – подумал он. Было половина седьмого, и стрелки спокойно двигались дальше, было даже больше половины, без малого уже три четверти. Неужели будильник не звонил? С кровати было видно, что он поставлен правильно, на четыре часа; и он, несомненно, звонил. Но как можно было спокойно спать под этот сотрясающий мебель трезвон? Ну, спал-то он неспокойно, но, видимо, крепко. Однако что делать теперь? Следующий поезд уходит в семь часов; чтобы поспеть на него, он должен отчаянно торопиться, а набор образцов еще не упакован, да и сам он отнюдь не чувствует себя свежим и легким на подъем. И даже поспей он на поезд, хозяйского разноса ему все равно не избежать – ведь рассыльный торгового дома дежурил у пятичасового поезда и давно доложил о его, Грегора, опоздании. Рассыльный, человек бесхарактерный и неумный, был ставленником хозяина. А что, если сказаться больным? Но это было бы крайне неприятно и показалось бы подозрительным, ибо за пятилетнюю свою службу Грегор ни разу еще не болел. Хозяин, конечно, привел бы врача больничной кассы и стал попрекать родителей сыном-лентяем, отводя любые возражения ссылкой на этого врача, по мнению которого все люди на свете совершенно здоровы и только не любят работать. И разве в данном случае он был бы так уж неправ? Если не считать сонливости, действительно странной после такого долгого сна, Грегор и в самом деле чувствовал себя превосходно и был даже чертовски голоден.Проснувшись однажды утром после беспокойного сна, Грегор Замза обнаружил, что он у себя в постели превратился в страшное насекомое. Лежа на панцирнотвердой спине, он видел, стоило ему приподнять голову, свой коричневый, выпуклый, разделенный дугообразными чешуйками живот, на верхушке которого еле держалось готовое вот-вот окончательно сползти одеяло. Его многочисленные, убого тонкие по сравнению с остальным телом ножки беспомощно копошились у него перед глазами. «Что со мной случилось?» – подумал он. Это не было сном. Его комната, настоящая, разве что слишком маленькая, но обычная комната, мирно покоилась в своих четырех хорошо знакомых стенах. Над столом, где были разложены распакованные образцы сукон – Замза был коммивояжером, – висел портрет, который он недавно вырезал из иллюстрированного журнала и вставил в красивую золоченую рамку. На портрете была изображена дама в меховой шляпе и боа, она сидела очень прямо и протягивала зрителю тяжелую меховую муфту, в которой целиком исчезала ее рука. Затем взгляд Грегора устремился в окно, и пасмурная погода – слышно было, как по жести подоконника стучат капли дождя – привела его и вовсе в грустное настроение. «Хорошо бы еще немного поспать и забыть всю эту чепуху», – подумал он, но это было совершенно неосуществимо, он привык спать на правом боку, а в теперешнем своем состоянии он никак не мог принять этого положения. С какой бы силой ни поворачивался он на правый бок, он неизменно сваливался опять на спину.".ToLower();
            string BS = "";
            byte[] bytes = Encoding.Default.GetBytes(input);
            foreach (byte b in bytes)
            {
                BS += Convert.ToString(b, 2).PadLeft(8, '0');
            }
            //BS = "10101100001001100111001101001111001110100111110011100001100111001100111000";
            List<Phrase> table = new List<Phrase>();
            string encoded = Encode(BS, 16, table);
            //Console.WriteLine("Кодированная строка: \t{0}", encoded);
            //string decoded = Decode(encoded, 16, table);
            //decoded = BinaryToString(decoded);
            //Console.WriteLine("Декодированная строка: \t{0}", decoded);
            Console.WriteLine("Степень сжатия 16бит: \t{0}", (double)BS.Length / (double)encoded.Length);
            string encoded32 = Encode(BS, 32, table);
            Console.WriteLine("Степень сжатия 32бит: \t{0}", (double)BS.Length / (double)encoded32.Length);
            string encoded516 = Encode(BS, 516, table);
            Console.WriteLine("Степень сжатия 516бит: \t{0}", (double)BS.Length / (double)encoded516.Length);
            string encoded1024 = Encode(BS, 1024, table);
            Console.WriteLine("Степень сжатия 1024бит: {0}", (double)BS.Length / (double)encoded1024.Length);
            string encoded4096 = Encode(BS, 4096, table);
            Console.WriteLine("Степень сжатия 4096бит: {0}", (double)BS.Length / (double)encoded4096.Length);
            Console.ReadLine();
        }
    }
}
